// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id         Int     @id @default(autoincrement())
    firstName  String
    lastName   String
    email      String  @unique
    avatar     String?
    password   String
    isVerified Boolean @default(false)

    accountVerification AccountVerification?
    accountRecovery     AccountRecovery?
    store               Store?
    reviews             Review[]

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model AccountVerification {
    id   Int    @id @default(autoincrement())
    code String

    user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId Int  @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model AccountRecovery {
    id   Int    @id @default(autoincrement())
    code String

    user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId Int  @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model Image {
    id        Int     @id @default(autoincrement())
    binary    Bytes
    src       String
    uniqueStr String?

    userId   Int? @unique
    reviewId Int? @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model Store {
    id        Int       @id @default(autoincrement())
    storeType StoreType

    user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId   Int       @unique
    business Business?
    product  Product[]
    reviews  Review[]

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model Business {
    id         Int     @id @default(autoincrement())
    name       String
    ownerName  String
    regNumber  String
    PAN        String?
    regImage   String
    phone      BigInt
    isVerified Boolean @default(false)

    store   Store @relation(fields: [storeId], references: [id], onDelete: Cascade)
    storeId Int   @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model Product {
    id           Int      @id @default(autoincrement())
    name         String
    description  String
    price        Float
    per          String?
    isSecondHand Boolean
    images       String[]
    isActive     Boolean  @default(false)
    brand        String?
    madeIn       String?

    store   Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
    storeId Int
    reviews Review[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Review {
    id    Int     @id @default(autoincrement())
    text  String
    image String?

    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId    Int
    product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
    productId Int?
    store     Store?   @relation(fields: [storeId], references: [id], onDelete: Cascade)
    storeId   Int?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique(fields: [userId, storeId], name: "user_store")
    @@unique(fields: [userId, productId], name: "user_product")
}

model Rating {
    id Int @id @default(autoincrement())
}

enum StoreType {
    IND
    BUS
}
